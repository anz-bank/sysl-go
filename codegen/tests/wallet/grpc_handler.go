// Code generated by sysl DO NOT EDIT.
package wallet

import (
	"context"

	pb "github.com/anz-bank/sysl-go/codegen/tests/cardspb"
	"github.com/anz-bank/sysl-go/core"
	"google.golang.org/grpc"
)

// GrpcServiceHandler for Wallet API
type GrpcServiceHandler struct {
	genCallback      core.GrpcGenCallback
	serviceInterface *GrpcServiceInterface
	unimpl           *pb.UnimplementedWalletServer
}

// NewGrpcServiceHandler for Wallet
func NewGrpcServiceHandler(genCallback core.GrpcGenCallback, serviceInterface *GrpcServiceInterface) *GrpcServiceHandler {
	return &GrpcServiceHandler{genCallback, serviceInterface, &(pb.UnimplementedWalletServer{})}
}

// RegisterServer registers the Wallet gRPC service
func (s *GrpcServiceHandler) RegisterServer(ctx context.Context, server *grpc.Server) {
	pb.RegisterWalletServer(server, s)
}

// Apple ...
func (s *GrpcServiceHandler) Apple(ctx context.Context, req *pb.AppleRequest) (*pb.AppleResponse, error) {
	if s.serviceInterface.Apple == nil {
		return s.unimpl.Apple(ctx, req)
	}

	ctx, cancel := s.genCallback.DownstreamTimeoutContext(ctx)
	defer cancel()
	client := AppleClient{}

	return s.serviceInterface.Apple(ctx, req, client)
}
