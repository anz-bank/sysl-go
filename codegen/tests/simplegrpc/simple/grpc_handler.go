// Code generated by sysl DO NOT EDIT.
package simple

import (
	"context"

	cb "github.com/anz-bank/sysl-go/codegen/tests/simplegrpc/callback"
	pb "github.com/anz-bank/sysl-go/codegen/tests/simplegrpc/simplepb"
	"google.golang.org/grpc"
)

// GrpcServiceHandler for SimpleGrpc API
type GrpcServiceHandler struct {
	genCallback      cb.GenCallback
	serviceInterface *GrpcServiceInterface
	unimpl           *pb.UnimplementedSimpleGrpcServer
}

// NewGrpcServiceHandler for SimpleGrpc
func NewGrpcServiceHandler(genCallback cb.GenCallback, serviceInterface *GrpcServiceInterface) *GrpcServiceHandler {
	return &GrpcServiceHandler{genCallback, serviceInterface, &(pb.UnimplementedSimpleGrpcServer{})}
}

// RegisterServer registers the SimpleGrpc gRPC service
func (s *GrpcServiceHandler) RegisterServer(ctx context.Context, server *grpc.Server) {
	pb.RegisterSimpleGrpcServer(server, s)
}

// GetStuff ...
func (s *GrpcServiceHandler) GetStuff(ctx context.Context, req *pb.GetStuffRequest) (*pb.GetStuffResponse, error) {
	if s.serviceInterface.GetStuff == nil {
		return s.unimpl.GetStuff(ctx, req)
	}

	ctx, cancel := s.genCallback.DownstreamTimeoutContext(ctx)
	defer cancel()
	client := GetStuffClient{}

	return s.serviceInterface.GetStuff(ctx, req, client)
}
