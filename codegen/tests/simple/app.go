// Code generated by sysl DO NOT EDIT.
package simple

import (
	"github.com/anz-bank/sysl-go/codegen/tests/deps"
	"github.com/anz-bank/sysl-go/codegen/tests/downstream"
	"github.com/anz-bank/sysl-go/config"
	"github.com/anz-bank/sysl-go/core"
	"github.com/anz-bank/sysl-go/handlerinitialiser"
)

// HandlerInit for Simple
type HandlerInit struct {
	RestHandlers []handlerinitialiser.HandlerInitialiser
	GrpcHandlers []handlerinitialiser.GrpcHandlerInitialiser
}

// InitialiseHandlers ...
func InitialiseHandlers(coreCfg *config.DefaultConfig, serviceInterface ServiceInterface, serviceCallback core.RestGenCallback) (*HandlerInit, error) {
	var err error = nil
	depsHTTPClient, depsErr := core.BuildDownstreamHTTPClient("deps", &coreCfg.GenCode.Downstream.(*DownstreamConfig).Deps)
	downstreamHTTPClient, downstreamErr := core.BuildDownstreamHTTPClient("downstream", &coreCfg.GenCode.Downstream.(*DownstreamConfig).Downstream)
	if depsErr != nil {
		return nil, depsErr
	}

	if downstreamErr != nil {
		return nil, downstreamErr
	}

	depsClient := deps.NewClient(depsHTTPClient, coreCfg.GenCode.Downstream.(*DownstreamConfig).Deps.ServiceURL)
	downstreamClient := downstream.NewClient(downstreamHTTPClient, coreCfg.GenCode.Downstream.(*DownstreamConfig).Downstream.ServiceURL)
	serviceHandler := NewServiceHandler(serviceCallback, &serviceInterface, depsClient, downstreamClient)
	serviceRouter := NewServiceRouter(serviceCallback, serviceHandler)
	httpHandlers := []handlerinitialiser.HandlerInitialiser{serviceRouter}
	return &HandlerInit{RestHandlers: httpHandlers}, err
}
