// Code generated by sysl DO NOT EDIT.
package dbendpoints

import (
	"encoding/json"
	"errors"
	"time"

	"github.com/anz-bank/sysl-go/validator"
	"github.com/rickb777/date"
)

// Reference imports to suppress unused errors
var _ = time.Parse

// Reference imports to suppress unused errors
var _ = date.Parse

// Company ...
type Company struct {
	AbnNumber      int64        `json:"abnNumber"`
	CompanyCountry string       `json:"companyCountry"`
	CompanyName    string       `json:"companyName"`
	Departments    []Department `json:"departments"`
}

// Department ...
type Department struct {
	DeptId   int64  `json:"deptId"`
	DeptLoc  string `json:"deptLoc"`
	DeptName string `json:"deptName"`
}

// GetCompanyLocationResponse ...
type GetCompanyLocationResponse struct {
	Companies []Company `json:"companies"`
	Message   string    `json:"message"`
}

// GetCompanyLocationListRequest ...
type GetCompanyLocationListRequest struct {
	DeptLoc     string
	CompanyName *string
}

func (r *GetCompanyLocationListRequest) UnmarshalJSON(data []byte) error {
	inner := GetCompanyLocationListRequest{}
	err := json.Unmarshal(data, &inner)
	if err != nil {
		return err
	}
	if inner.CompanyName == nil {
		return errors.New("CompanyName cannot be nil")
	}

	*r = GetCompanyLocationListRequest{
		DeptLoc:     inner.DeptLoc,
		CompanyName: inner.CompanyName,
	}
	return nil
}

// *Company validator
func (s *Company) Validate() error {
	return validator.Validate(s)
}

// *Department validator
func (s *Department) Validate() error {
	return validator.Validate(s)
}

// *GetCompanyLocationResponse validator
func (s *GetCompanyLocationResponse) Validate() error {
	return validator.Validate(s)
}
