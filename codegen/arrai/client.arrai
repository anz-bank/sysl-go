let go = //{./go};
let sysl = //{./sysl};

\(:module, :ep, :method, :hasDB) $`
    client := ${method}Client{
        ${sysl.endpoint.calls(ep) >>
            let dep = go.module(module).targetApp(.('target'));
            let package = go.package(dep);
            let ep = sysl.app.endpoint(dep, .('endpoint').s);
            let method = go.methodName(ep);
            $`${method}: s.${package}${go.name(package)}Service.${method},`
        ::\i:\n}${
            cond {hasDB: $`
                conn: conn,
                ${sysl.endpoint.sqlStatements(ep) => $`${.@}: ${.@}Stmt,` orderby .::\i}
            `}
        }
    }
`
